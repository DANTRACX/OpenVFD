close all
clear all

%% SETTINGS FOR CALCULATIONS
PERIODCYCLES = 1024;
m = 225; %225 equals 100% [0-255]

%% TIMING CALCULATION & SIGNAL GENERATION
SIGNAL0 = 0;
SIGNAL1 = 0;
SIGNAL2 = 0;

disp('Calculating Signals...');
for i = (0:50:20*360)
    z = mod(i, 20*360);
    [T0, T1, T2] = calcTimings(m, z, PERIODCYCLES);         % CALCULATE TIMING VALUES
    [S0, S1, S2] = calcSignal(T0, T1, T2, PERIODCYCLES);    % GENERATE SIGNAL FROM TIMING VALUES        
    SIGNAL0 = horzcat(SIGNAL0, S0);
    SIGNAL1 = horzcat(SIGNAL1, S1); 
    SIGNAL2 = horzcat(SIGNAL2, S2); 
    
%     %% OPTIONAL: PLOT FIGURES
%     subplot(4, 1, 1);
%     plot((1:1:(2*PERIODCYCLES)), S0);
%     ylim([-2, 2]);
%     subplot(4, 1, 2);
%     plot((1:1:(2*PERIODCYCLES)), S1);
%     ylim([-2, 2]);
%     subplot(4, 1, 3);
%     plot((1:1:(2*PERIODCYCLES)), S2);
%     ylim([-2, 2]);
%     subplot(4, 1, 4);
%     plot((1:1:(2*PERIODCYCLES)), i.*ones(1, length((1:1:(2*PERIODCYCLES)))));
%     ylim([0, 360]);
%     M(i+1) = getframe;
end

%% GENERATE SIGNAL FOR SIMULINK EXPORT
disp('Generating Timeseries...');
TIMESERIES0 = horzcat(SIGNAL0, SIGNAL0, SIGNAL0, SIGNAL0, SIGNAL0, 0);
TIMESERIES1 = horzcat(SIGNAL1, SIGNAL1, SIGNAL1, SIGNAL1, SIGNAL1, 0);
TIMESERIES2 = horzcat(SIGNAL2, SIGNAL2, SIGNAL2, SIGNAL2, SIGNAL2, 0);
TIMESERIES0 = vertcat((0:(1/length(SIGNAL0)):5), TIMESERIES0);
TIMESERIES1 = vertcat((0:(1/length(SIGNAL1)):5), TIMESERIES1);
TIMESERIES2 = vertcat((0:(1/length(SIGNAL2)):5), TIMESERIES2);
disp('Saving Timeseries...');
save('data_s0.mat','TIMESERIES0');
save('data_s1.mat','TIMESERIES1');
save('data_s2.mat','TIMESERIES2');
disp('Running Simulink Model...');
sim('svpwm_simulink');


function [t0, t1, t2] = calcTimings(modIdx, angle, periodcycles)
    %( 10bit PWM with div1, 32MHz), ~15kHz
    sectorAngle = mod(angle,(20*60));
    sine_lookup = floor(periodcycles.*sind(0:1/20:60)); % von 0.00-59.95
    temp1 = sine_lookup(((20*60)-sectorAngle));
    temp1 = floor((temp1 *modIdx) / 256);
    temp2 = sine_lookup(sectorAngle + 1);
    temp2 = floor((temp2 *modIdx) / 256);
    temp0 = floor((periodcycles - (temp1 + temp2)) / 2);
    
    %DETECT SECTOR CALCULATE CTC VALUES
    a = floor(angle/(20*60));
    if a == 0
        t0 = temp0;
        t1 = temp0 + temp1;
        t2 = temp0 + temp1 + temp2;
    elseif a == 1
        t0 = temp0 + temp2;
        t1 = temp0;
        t2 = temp0 + temp1 + temp2;
    elseif a == 2
        t0 = temp0 + temp1 + temp2;
        t1 = temp0;
        t2 = temp0 + temp1;    
    elseif a == 3
        t0 = temp0 + temp1 + temp2;
        t1 = temp0 + temp2;
        t2 = temp0;  
    elseif a == 4
        t0 = temp0 + temp1;
        t1 = temp0 + temp1 + temp2;
        t2 = temp0;
    elseif a == 5
        t0 = temp0;
        t1 = temp0 + temp1 + temp2;
        t2 = temp0 + temp2;
    end
end

function [s0, s1, s2] = calcSignal(t0, t1, t2, periodcycles)
    s0 = zeros(1,2*periodcycles);
    s1 = zeros(1,2*periodcycles);
    s2 = zeros(1,2*periodcycles);
    
    s0((t0)+1:end-(t0)) = 1;
    s1((t1)+1:end-(t1)) = 1;
    s2((t2)+1:end-(t2)) = 1;
end 
